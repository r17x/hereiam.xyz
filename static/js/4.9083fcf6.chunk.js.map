{"version":3,"sources":["App.js"],"names":["APP_NAME","process","App","state","result","PUBLICAPI","getData","_callee","resultTemp","description","_home_travis_build_ri7nz_hereiam_xyz_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","_this","Promise","all","map","api","axios","get","then","_ref2","data","sent","forEach","name","index","uriName","window","URL","Object","assign","_home_travis_build_ri7nz_hereiam_xyz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","hostname","city","country_name","setState","document","title","stop","renderList","Card","props","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","keys","list","match","undefined","includes","key","style","textAlign","String","replace","toUpperCase","this","Component"],"mappings":"8MAMwBA,qBAAaC,eAE/BC,6MACJC,MAAQ,CACNC,OAAQ,GACRC,UAAW,CACT,mCACA,yBACA,6BAQJC,6BAAU,SAAAC,IAAA,IAAAH,EAAAI,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACAX,EAAWY,EAAKb,MAAhBC,OADAS,EAAAE,KAAA,EAGiBE,QAAQC,IAC/BF,EAAKb,MAAME,UAAUc,IAAI,SAAAC,GAAG,OAAIC,IAAMC,IAAIF,GAAKG,KAAK,SAAAC,GAAA,OAAAA,EAAGC,UAJjD,OAGFjB,EAHEK,EAAAa,KAORV,EAAKb,MAAME,UAAUsB,QAAQ,SAACC,EAAMC,GAClC,IAAMC,EAAU,IAAIC,OAAOC,IAAIJ,GAC/BK,OAAOC,OAAO9B,EAAd6B,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAQM,SAAW5B,EAAWqB,OAGnDpB,EAAcL,EAAO,aACtBA,EAAO,YAAYiC,MAAQ,IAC5B,MACCjC,EAAO,YAAYkC,cAAgB,IACpC,GAEJtB,EAAKuB,SAAS,CAAEnC,SAAQK,eAAe,WACrC+B,SAASC,MAAQzC,EAAW,MAAQS,IAnB9B,wBAAAI,EAAA6B,SAAAnC,QAuBVoC,WAAa,WAAM,IACTvC,EAAWY,EAAKb,MAAhBC,OACFwC,EAAO,SAAAC,GAAS,IACZpB,EAASoB,EAATpB,KACR,OACEqB,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,QACbF,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,oBACfF,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,cACbF,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,sBAAsBH,EAAMjB,MACzCH,EACGQ,OAAOgB,KAAKxB,GAAMN,IAAI,SAAC+B,EAAMrB,GAC3B,OACEqB,EAAKC,MAAM,YACX,MAACC,EAAW,KAAM,IAAIC,SAAS5B,EAAKyB,IAE7B,KAEPJ,EAAAnC,EAAAoC,cAAA,KAAGO,IAAKzB,EAAO0B,MAAO,CAAEC,UAAW,SAChCC,OAAOP,GACLQ,QAAQ,wBAAyB,KACjCC,cACHb,EAAAnC,EAAAoC,cAAA,cAAStB,EAAKyB,OAIpB,QAKZ,OACEjB,OAAOgB,KAAK7C,GAAQe,IAAI,SAAAS,GAAI,OAC1BkB,EAAAnC,EAAAoC,cAACH,EAAD,CAAMhB,KAAMA,EAAM0B,IAAK1B,EAAMH,KAAMrB,EAAOwB,QACtC,yFA3DRgC,KAAKtD,2CA+DE,IACCG,EAAgBmD,KAAKzD,MAArBM,YACR,OACEqC,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,OACbF,EAAAnC,EAAAoC,cAAA,UAAQC,UAAU,cAChBF,EAAAnC,EAAAoC,cAAA,2BACCtC,EAAcqC,EAAAnC,EAAAoC,cAAA,SAAItC,GAAmB,KACtCqC,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,wBAAwBY,KAAKjB,uBAjFpCkB,aAwFH3D","file":"static/js/4.9083fcf6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport './index.css'\nimport './App.css'\nimport '_card.scss'\n\nconst { REACT_APP_NAME: APP_NAME } = process.env\n\nclass App extends Component {\n  state = {\n    result: {},\n    PUBLICAPI: [\n      'http://www.geoplugin.net/json.gp',\n      'https://ipapi.co/json/',\n      'http://ip-api.com/json',\n    ],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData = async () => {\n    const { result } = this.state\n\n    const resultTemp = await Promise.all(\n      this.state.PUBLICAPI.map(api => axios.get(api).then(({ data }) => data)),\n    )\n\n    this.state.PUBLICAPI.forEach((name, index) => {\n      const uriName = new window.URL(name)\n      Object.assign(result, { [uriName.hostname]: resultTemp[index] })\n    })\n\n    const description = result['ipapi.co']\n      ? (result['ipapi.co'].city || '') +\n        ', ' +\n        (result['ipapi.co'].country_name || '')\n      : ''\n\n    this.setState({ result, description }, () => {\n      document.title = APP_NAME + ' ~ ' + description\n    })\n  }\n\n  renderList = () => {\n    const { result } = this.state\n    const Card = props => {\n      const { data } = props\n      return (\n        <div className=\"card\">\n          <div className=\"card--cap green\" />\n          <div className=\"card--body\">\n            <h2 className=\"card--header green\">{props.name}</h2>\n            {data\n              ? Object.keys(data).map((list, index) => {\n                  if (\n                    list.match(/credit/i) ||\n                    [undefined, null, ''].includes(data[list])\n                  )\n                    return null\n                  return (\n                    <p key={index} style={{ textAlign: 'left' }}>\n                      {String(list)\n                        .replace(/[^a-zA-Z ]|geoplugin/g, ' ')\n                        .toUpperCase()}\n                      <strong>{data[list]}</strong>\n                    </p>\n                  )\n                })\n              : null}\n          </div>\n        </div>\n      )\n    }\n    return (\n      Object.keys(result).map(name => (\n        <Card name={name} key={name} data={result[name]} />\n      )) || null\n    )\n  }\n\n  render() {\n    const { description } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Here You Are!</h1>\n          {description ? <p>{description}</p> : null}\n          <div className=\"choose-test__wrapper\">{this.renderList()}</div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n"],"sourceRoot":""}